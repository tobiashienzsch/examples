cmake_minimum_required(VERSION 3.15)
project({{ project }})

if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
    set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

    # C++ Standard
    set(CMAKE_CXX_STANDARD 20)
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
    set(CMAKE_CXX_EXTENSIONS OFF)

    # Static Library
    set(BUILD_SHARED_LIBS OFF)

    # Link-Time Optimization
    include(CheckIPOSupported)
    check_ipo_supported(RESULT COMPILER_SUPPORTS_LTO)
    if(COMPILER_SUPPORTS_LTO)
        set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)
    endif()
endif()

add_library(${PROJECT_NAME}_lib)
target_sources(${PROJECT_NAME}_lib 
    PUBLIC {% for file in files %} 
        {{ file }} {% endfor %}
)

add_executable(${PROJECT_NAME})
target_sources(${PROJECT_NAME} PRIVATE {{ main }})
target_link_libraries(${PROJECT_NAME} PRIVATE ${PROJECT_NAME}_lib)
